% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rename.R
\name{rename_in}
\alias{rename_in}
\title{Rename names \code{\%in\%} a set}
\usage{
rename_in(x, table, f, ...)
}
\arguments{
\item{x}{An object with names.}

\item{table}{A character vector passed to \code{\%in\%}.}

\item{f}{A function, one-sided formula, or character vector.}

\item{...}{Passed into \code{f}. An error is thrown if \code{...} is non-empty when \code{f}
is a character vector.}
}
\value{
The renamed object.
}
\description{
Rename names \code{\%in\%} a set
}
\details{
\itemize{
\item If \code{f} is a function it will be applied to the selected names. If it is
a formula it will be converted to a function by \code{\link[rlang:as_function]{rlang::as_function()}}, then
applied.
\item If \code{f} is a named character vector like \code{c(new_name = "old_name", ...)} then
\code{"old_name"} will become \code{"new_name"}, as in \code{dplyr::rename()}.
\item If \code{f} is an unnamed character vector, these will be the new names in order.
}
}
\examples{

vec <- c("One" = 1, "Two" = 2, "Three" = 3, "Four" = 4)
rename_in(vec, c("Two", "Three"), paste0, "x")

}
